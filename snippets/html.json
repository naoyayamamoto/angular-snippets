{".text.html.basic":{"Material Slide Toggle":{"prefix":"m-slide-toggle","description":"Material Slide toggle","types":"typescript, html","body":"<mat-slide-toggle>${1:text}</mat-slide-toggle>$0"},"Material Chip List":{"prefix":"m-chip-list","description":"Material Chip List","types":"typescript, html","body":"<mat-chip-list>\n\t<mat-chip>${1:text}<mat-chip>\n</mat-chip-list>$0"},"Material Chip Stacked List":{"prefix":"m-chip-list-stacked","description":"Material Chip Stacked List","types":"typescript, html","body":"<mat-chip-list class=\"mat-chip-list-stacked\">\n\t<mat-chip>${1:text}<mat-chip>\n</mat-chip-list>$0"},"Material Chip":{"prefix":"m-chip","description":"Material Chip","types":"typescript, html","body":"<mat-chip>${1:text}<mat-chip>$0"},"Material Paginator":{"prefix":"m-paginator","description":"Material Paginator","types":"typescript, html","body":"<mat-paginator [length]=\"${1:length}\"\n\t[pageSize]=\"${2:pageSize}\"\n\t[pageSizeOptions]=\"${3:pageSizeOptions}\"\n\t(page)=\"pageEvent = $${4:event}\">\n</mat-paginator>$0"},"Material Table":{"prefix":"m-table","description":"Material Table","types":"typescript, html","body":"<mat-table #table [dataSource]=\"${1:dataSource}\">\n\t<ng-container cdkColumnDef=\"${2:column}\">\n\t\t<mat-header-cell *cdkHeaderCellDef>${3:header}</mat-header-cell>\n\t\t<mat-cell *cdkCellDef=\"let row\">{{row.${2:column}}}</mat-cell>\n\t</ng-container>\n</mat-table>$0"},"Material Table Column":{"prefix":"m-table-column","description":"Material Table Column","types":"typescript, html","body":"<ng-container cdkColumnDef=\"${1:column}\">\n\t<mat-header-cell *cdkHeaderCellDef>${2:header}</mat-header-cell>\n\t<mat-cell *cdkCellDef=\"let row\">{{row.${1:column}}}</mat-cell>\n</ng-container>$0"},"Material Input Text":{"prefix":"m-input","description":"Material Input Textbox","types":"typescript, html","body":"<mat-form-field>\n\t<input matInput placeholder=\"${1:label}\" value=\"${2:value}\">\n</mat-form-field>$0"},"Material Grid List":{"prefix":"m-grid-list","description":"Material Grid List","types":"typescript, html","body":"<mat-grid-list cols=\"${1:cols}\" rowHeight=\"${2:height}px\">\n\t<mat-grid-tile\n\t\t*ngFor=\"let ${3:tile} of ${4:tiles}\"\n\t\t[colspan]=\"${3:tile}.cols\"\n\t\t[rowspan]=\"${3:tile}.rows\"\n\t\t{{${3:tile}.text}}\n\t</mat-grid-tile>\n</mat-grid-list>$0"},"Material Icon Button":{"prefix":"m-button-icon","description":"Circular Material button with a transparent background","types":"typescript, html","body":"<button mat-icon-button>\n\t<mat-icon>$1</mat-icon>\n</button>$0"},"Material Button":{"prefix":"m-button","description":"Rectangular Material button w/ no elevation.","types":"typescript, html","body":"<button mat-button>${1:text}</button>$0"},"Material Raised Button":{"prefix":"m-button-raised","description":"Rectangular Material button w/ elevation.","types":"typescript, html","body":"<button mat-raised-button>${1:text}</button>$0"},"Material Round Button":{"prefix":"m-button-fab","description":"Circular button w/ elevation.","types":"typescript, html","body":"<button mat-fab><mat-icon>${1:icon_name}</mat-icon></button>$0"},"Material Round Small Button":{"prefix":"m-button-fab-mini","description":"Small circular button w/ elevation.","types":"typescript, html","body":"<button mat-mini-fab><mat-icon>${1:icon_name}</mat-icon></button>$0"},"Material Toggle Button":{"prefix":"m-button-toggle","description":"Material toggle button","types":"typescript, html","body":"<mat-button-toggle>${1:text}</mat-button-toggle>$0"},"Material Divider":{"prefix":"m-divider","description":"Material Divider","types":"typescript, html","body":"<mat-divider></mat-divider>$0"},"Material Inset Divider":{"prefix":"m-divider-inset","description":"Material Inset Divider","types":"typescript, html","body":"<mat-divider [inset]=\"true\"></mat-divider>$0"},"Material Vertical Divider":{"prefix":"m-divider-vertical","description":"Material Vertical Divider","types":"typescript, html","body":"<mat-divider [vertical]=\"true\"></mat-divider>$0"},"Material Basic Card":{"prefix":"m-card","description":"Material Basic Card","types":"typescript, html","body":"<mat-card>\n\t$1\n</mat-card>$0"},"Material Card":{"prefix":"m-card-full","description":"Material Card","types":"typescript, html","body":"<mat-card>\n\t<mat-card-header>\n\t\t<mat-card-title>${1:title}</mat-card-title>\n\t\t<mat-card-subtitle>${2:subtitle}</mat-card-subtitle>\n\t</mat-card-header>\n\t<mat-card-content>\n\t$1\n\t</mat-card-content>\n\t<mat-card-actions>\n\t\t<button mat-button>${3:Ok}</button>\n\t</mat-card-actions>\n</mat-card>$0"},"Material Tooltip":{"prefix":"m-tooltip","description":"Material Tooltip","types":"typescript, html","body":"matTooltip=\"${1:text}\"$0"},"Material Tooltip Position":{"prefix":"m-tooltip-position","description":"Material Tooltip position","types":"typescript, html","body":"[matTooltipPosition]=\"${1:above,below,left,right,before,after}\"$0"},"Material Tooltip With Position":{"prefix":"m-tooltip-with-position","description":"Material Tooltip with position","types":"typescript, html","body":"matTooltip=\"${1:text}\" [matTooltipPosition]=\"${2:above,below,left,right,before,after}\"$0"},"Material FA Icon":{"prefix":"m-icon-fontawesome","description":"Material Font Awesome Icon","types":"typescript, html","body":"<mat-icon mat-font-icon=\"fa-${1:icon}\" class=\"fa\"></mat-icon>$0"},"Material SVG Icon":{"prefix":"m-icon-svg","description":"Material SVG Icon","types":"typescript, html","body":"<mat-icon svgIcon=\"${1:src}\"></mat-icon>$0"},"Material Icon":{"prefix":"m-icon","description":"Material Icon","types":"typescript, html","body":"<mat-icon>${1:icon}</mat-icon>$0"},"Material Icon with Badge":{"prefix":"m-icon-badge","description":"Material Icon with a Badge","types":"typescript, html","body":"<mat-icon\n\tcolor=\"primary\"\n\tmatBadge=\"${1:number}\"\n\tmatBadgePosition=\"${2:above,below} ${3:after,before}\"\n\tmatBadgeColor=\"accent\">\n\t\t${4:icon}\n</mat-icon>$0"},"Material Datepicker":{"prefix":"m-datepicker","description":"Material Datepicker","types":"typescript, html","body":"<mat-form-field>\n\t<input matInput [matDatepicker]=\"${1:picker}\" placeholder=\"${2:title}\">\n\t<mat-datepicker-toggle matSuffix [for]=\"${1:picker}\"></mat-datepicker-toggle>\n\t<button matSuffix [matDatepickerToggle]=\"${1:picker}\"></button>\n\t<mat-datepicker #${1:picker}></mat-datepicker>\n</mat-form-field>\n$0"},"Material toolbar":{"prefix":"m-toolbar","description":"Material toolbar","types":"typescript, html","body":"<mat-toolbar>\n\t<span>${1:FirstRow}</span>\n</mat-toolbar>$0"},"Material toolbar row":{"prefix":"m-toolbar-row","description":"Material toolbar row","types":"typescript, html","body":"<mat-toolbar-row>\n\t<span>${1:FirstRow}</span>\n</mat-toolbar-row>$0"},"Material toolbar-multiRow":{"prefix":"m-toolbar-multiRow","description":"Material Toolbar with multiple rows","types":"typescript, html","body":"<mat-toolbar>\n\t<span>${1:FirstRow}</span>\n\t<mat-toolbar-row>\n\t\t<span>${2:SecondRow}</span>\n\t</mat-toolbar-row>\n\t<mat-toolbar-row>\n\t\t<span>${3:ThirdRow}</span>\n\t</mat-toolbar-row>\n</mat-toolbar>$0"},"Material Tab Group":{"prefix":"m-tab-group","description":"Material Tab Group","types":"typescript, html","body":"<mat-tab-group>\n\t<mat-tab label=\"${1:TabHeader1}\">$2</mat-tab>\n\t<mat-tab label=\"${3:TabTabHeader2}\">$4</mat-tab>\n</mat-tab-group>$0"},"Material Tab":{"prefix":"m-tab","description":"Material Tab","types":"typescript, html","body":"<mat-tab label=\"${1:TabHeader}\">$2</mat-tab>$0"},"Material Select":{"prefix":"m-select","description":"Material Select","types":"typescript, html","body":"<mat-select placeholder=\"${1:Placeholder}\" [(ngModel)]=\"selectedValue\" name=\"${2:item}\">\n\t<mat-option *ngFor=\"let ${3:item} of ${4:items}\" [value]=\"${3:item}.value\">\n\t\t{{${3:item}.viewValue}}\n\t</mat-option>\n</mat-select>$0"},"Material drag drop box":{"prefix":"m-drag-drop-box","description":"Material drag drop box","types":"typescript, html","body":"<div class=\"${1:drag-drop-box}\" cdkDrag>\n</div>$0"},"Material List":{"prefix":"m-list","description":"Material List","types":"typescript, html","body":"<mat-list>\n\t<mat-list-item>${1:item}</mat-list-item>$2\n</mat-list>$0"},"Material List ngFor":{"prefix":"m-list-ngfor","description":"Material List ngFor","types":"typescript, html","body":"<mat-list>\n\t<mat-list-item *ngFor=\"let ${1:item} of ${2:items}\">{{ ${1:item} }}</mat-list-item>$1\n</mat-list>$0"},"Material List Item":{"prefix":"m-list-item","description":"Material List Item","types":"typescript, html","body":"<mat-list-item>${1:item}</mat-list-item>$0"},"Material Slider":{"prefix":"m-slider","description":"Material Slider","types":"typescript, html","body":"<mat-slider min=\"${1:min}\" max=\"${2:max}\" step=\"${3:step}\" value=\"${4:value}\"></mat-slider>$0"},"Material Vertical Slider":{"prefix":"m-slider-vertical","description":"Material Vertical Slider","types":"typescript, html","body":"<mat-slider vertical min=\"${1:min}\" max=\"${2:max}\" step=\"${3:step}\" value=\"${4:value}\"></mat-slider>$0"},"Material Slider Thumblabel":{"prefix":"m-slider-thumbLabel","description":"Material Slider thumbLabel","types":"typescript, html","body":"<mat-slider thumbLabel tickInterval=\"${1:interval}\"></mat-slider>$0"},"Material Slider TickInterval":{"prefix":"m-slider-tickInterval","description":"Material Slider tickInterval","types":"typescript, html","body":"<mat-slider step=\"${1:step}\" tickInterval=\"${2:interval}\"></mat-slider>$0"},"Material Slider TickInterval Auto":{"prefix":"m-slider-tickInterval-auto","description":"Material Slider tickInterval Auto","types":"typescript, html","body":"<mat-slider tickInterval=\"auto\"></mat-slider>$0"},"Material Vertical Stepper":{"prefix":"m-stepper-vertical","description":"Material Vertical Stepper","types":"typescript, html","body":"<mat-vertical-stepper>\n\t<mat-step label=\"${1:label1}\">\n\t\t$2\n\t</mat-step>\n\t<mat-step label=\"${3:label2}\">\n\t\t$4\n\t</mat-step>\n</mat-vertical-stepper>$0"},"Material Horizontal Stepper":{"prefix":"m-stepper-horizontal","description":"Material Horizontal Stepper","types":"typescript, html","body":"<mat-horizontal-stepper>\n\t<mat-step label=\"${1:label1}\">\n\t\t$2\n\t</mat-step>\n\t<mat-step label=\"${3:label2}\">\n\t\t$4\n\t</mat-step>\n</mat-horizontal-stepper>$0"},"Material Stepper Step":{"prefix":"m-step","description":"Material Vertical Stepper","types":"typescript, html","body":"<mat-step label=\"${1:label}\">\n\t$2\n</mat-step>\n$0"},"Material Accordion":{"prefix":"m-accordion","description":"Material Accordion","types":"typescript, html","body":"<mat-accordion>\n\t<mat-expansion-panel>\n\t\t<mat-expansion-panel-header>\n\t\t\t<mat-panel-title>\n\t\t\t\t$1\n\t\t\t</mat-panel-title>\n\t\t\t<mat-panel-description>\n\t\t\t\t$2\n\t\t\t</mat-panel-description>\n\t\t</mat-expansion-panel-header>\n\t\t$3\n\t</mat-expansion-panel>\n</mat-accordion>$0"},"Material Expansion Panel":{"prefix":"m-expansion-panel","description":"Material Expansion Panel","types":"typescript, html","body":"<mat-expansion-panel>\n\t<mat-expansion-panel-header>\n\t\t${1:title}\n\t</mat-expansion-panel-header>\n\t${2:content}\n</mat-expansion-panel>$0"},"Material Expansion Panel Action Row":{"prefix":"m-action-row","description":"Material Expansion Panel Action Row","types":"typescript, html","body":"<mat-action-row>\n\t$1\n</mat-action-row>$0"},"Material Checkbox ngmodel":{"prefix":"m-checkbox-ngmodel","description":"Material Checkbox ngmodel","types":"typescript, html","body":"<mat-checkbox [(ngModel)]=\"${1:property.checkedOrUnchecked}\">${2:text}</mat-checkbox>$0"},"Material Checkbox":{"prefix":"m-checkbox","description":"Material Checkbox","types":"typescript, html","body":"<mat-checkbox>${1:text}</mat-checkbox>$0"},"Material Spinner":{"prefix":"m-spinner","description":"Material Spinner","types":"typescript, html","body":"<mat-spinner></mat-spinner>$0"},"Material Determinate Spinner":{"prefix":"m-spinner-determinate","description":"Material Determinate Spinner","types":"typescript, html","body":"<mat-spinner\n\t[value]=\"${1:value}\">\n</mat-spinner>$0"},"Material Indeterminate Spinner":{"prefix":"m-spinner-indeterminate","description":"Material Indeterminate Spinner","types":"typescript, html","body":"<mat-spinner\n\t[mode]=\"indeterminate\">\n</mat-spinner>$0"},"Material Radio Button":{"prefix":"m-radiobutton","description":"Material Radio Button","types":"typescript, html","body":"<mat-radio-group>\n\t<mat-radio-button value=\"${1:value1}\">${2:Option1}</mat-radio-button>\n\t<mat-radio-button value=\"${3:value2}\">${4:Option2}</mat-radio-button>\n</mat-radio-group>$0"},"Material Radio Button Option":{"prefix":"m-radiobutton-option","description":"Material Radio Button Option","types":"typescript, html","body":"<mat-radio-button value=\"${1:value}\">${2:Option}</mat-radio-button>$0"},"Material Indeterminate Progress Bar":{"prefix":"m-progress-bar-indeterminate","description":"Material indeterminate Progress Bar","types":"typescript, html","body":"<mat-progress-bar mode=\"indeterminate\"></mat-progress-bar>$1"},"Material Query Progress Bar":{"prefix":"m-progress-bar-query","description":"Material Query Progress Bar","types":"typescript, html","body":"<mat-progress-bar mode=\"query\"></mat-progress-bar>$1"},"Material Buffer Progress Bar":{"prefix":"m-progress-bar-buffer","description":"Material Buffer Progress Bar","types":"typescript, html","body":"<mat-progress-bar mode=\"buffer\" [color]=\"${1:color}\" [value]=\"${2:value}\" [bufferValue]=\"${3:bufferValue}\"></mat-progress-bar>$4"},"Material Determinate Progress Bar":{"prefix":"m-progress-bar","description":"Material Determinate Progress Bar","types":"typescript, html","body":"<mat-progress-bar mode=\"determinate\" [value]=\"${1:value}\"></mat-progress-bar>$2"},"Material Menu":{"prefix":"m-menu","description":"Material Menu","types":"typescript, html","body":"<mat-menu #${1:appMenu}=\"matMenu\">\n\t$2\n</mat-menu>"},"Material Menu Trigger For":{"prefix":"m-menu-trigger-for","description":"Material Menu Trigger For","types":"typescript, html","body":"[matMenuTriggerFor]=\"${1:appMenu}\"$2"},"Material Menu Overlap Trigger":{"prefix":"m-menu-overlap-trigger","description":"Material Menu Overlap Trigger","types":"typescript, html","body":"[overlapTrigger]=\"${1:false}\"$2"},"Material Menu Item":{"prefix":"m-menu-item","description":"Material Menu Item","types":"typescript, html","body":"mat-menu-item"},"Material Menu Item Button":{"prefix":"m-menu-item-button","description":"Material Menu Item Button","types":"typescript, html","body":"<button mat-menu-item>$1</button>"},"http get":{"prefix":"ng-http-get-v2","description":"Deprecated Http observable get request","types":"typescript, html","body":"this.http.get('${1:url}')\n\t.map((res: Response) => {\n\t\tres.json();\n})$0"},"httpClient get":{"prefix":"ng-http-get","description":"HttpClient observable get request","types":"typescript, html","body":"this.http.get('${1:url}')$0"},"http get post":{"prefix":"ng-http-get-post","description":"Http observable get & post request","types":"typescript, html","body":"get${1:Type}(): Observable<Partial<${1:Type}>[]> {\n\treturn this.http.get(${2:url})\n}\n\nadd${1:Type}(${3:name}: any): Observable<${1:Type}> {\n\tlet body = JSON.stringify(${3:name});\n\tlet headers = new Headers({ 'Content-Type': 'application/json'});\n\tlet options = new RequestOptions({ headers: headers });\n\n\treturn this.http.post(${2:url}, body, options)\n}\n$0"},"Angular Router Link":{"prefix":"ng-router-link","description":"Router link","types":"typescript, html","body":"<a [routerLink]=\"[ '/${1:path}', ${2:routeParam} ]\">${3:name}</a>$0"},"Angular Router Attribute":{"prefix":"ng-router-attribute","description":"Router link","types":"typescript, html","body":"[routerLink]=\"[ '/${1:path}', ${2:routeParam} ]\"$0"},"Angular Router Active Link":{"prefix":"ng-router-linkActive","description":"Router active link","types":"typescript, html","body":"<a [routerLink]=\"[ '/${1:path}' ]\" routerLinkActive=\"active\">${2:name}</a>$0"},"Angular Router Outlet":{"prefix":"ng-router-outlet","description":"Router outlet element","types":"typescript, html","body":"<router-outlet></router-outlet>\n$0"},"Angular Router Outlet Name":{"prefix":"ng-router-outlet-name","description":"Router outlet element with name","types":"typescript, html","body":"<router-outlet name=\"${1:name}\"></router-outlet>\n$0"},"Angular UpperCase Pipe":{"prefix":"ng-pipe-uppercase","description":"Uppercase pipe","types":"typescript, html","body":"{{ ${1:variable} | uppercase }}$0"},"Angular LowerCase Pipe":{"prefix":"ng-pipe-lowercase","description":"Lowercase pipe","types":"typescript, html","body":"{{ ${1:variable} | lowercase }$0"},"Angular TitleCase Pipe":{"prefix":"ng-pipe-titlecase","description":"Titlecase pipe","types":"typescript, html","body":"{{ ${1:variable} | titlecase }$0"},"Angular Date Pipe":{"prefix":"ng-pipe-date","description":"Date pipe - Default format: 09/15/1971","types":"typescript, html","body":"{{ ${1:variable} | date }}$0"},"Angular Custom Date Pipe":{"prefix":"ng-pipe-date-custom","description":"Date pipe - Format: \"MM/dd/yy\" = 09/15/71","types":"typescript, html","body":"{{ ${1:variable} | date:\"MM/dd/yy\" }}$0"},"Angular Short Date Pipe":{"prefix":"ng-pipe-date-short","description":"Short date pipe - Format: 09/15/1971","types":"typescript, html","body":"{{ ${1:variable} | date:shortDate }}$0"},"Angular Full Date Pipe":{"prefix":"ng-pipe-date-full","description":"Full date pipe - Format: Wednesday, September 15, 1971","types":"typescript, html","body":"{{ ${1:variable} | date:fullDate }}$0"},"Angular Percent Pipe":{"prefix":"ng-pipe-percent","description":"Percent pipe - Usage: number_expression &#x7c; percent[:digitInfo]","types":"typescript, html","body":"{{ ${1:variable} | percent:${2:digitInfo} }}$0"},"Angular Decimal Pipe":{"prefix":"ng-pipe-decimal","description":"Decimal pipe - Usage: number_expression &#x7c; decimal[:digitInfo]","types":"typescript, html","body":"{{ ${1:variable} | decimal:${2:digitInfo} }}$0"},"Angular Slice Pipe":{"prefix":"ng-pipe-slice","description":"Slice pipe - Usage: array_or_string_expression &#x7c; slice:start[:end]","types":"typescript, html","body":"{{ ${1:variable} | slice:${2:start}:${3:end} }}$0"},"Angular Currency Pipe":{"prefix":"ng-pipe-currency","description":"Currency pipe - Usage: money &#x7c; currency:'EUR'","types":"typescript, html","body":"{{ ${1:variable} | currency:'${2:CURRENCY}' }}$0"},"Angular Json Pipe":{"prefix":"ng-pipe-json","description":"Json pipe - Usage: object &#x7c; json","types":"typescript, html","body":"{{ ${1:object} | json }}$0"},"Angular Async Pipe":{"prefix":"ng-pipe-async","description":"Async pipe - Usage: observable_or_promise_expression &#x7c; async","types":"typescript, html","body":"{{ ${1:observable} | async }}$0"},"Angular Debug":{"prefix":"ng-debug","description":"pre obj pipe json","types":"typescript, html","body":"<pre>{{ ${1:obj} | json }}</pre>$0"},"Angular Debug Async":{"prefix":"ng-debug-async","description":"pre obj pipe async pipe json","types":"typescript, html","body":"<pre>{{ ${1:obj} | async | json }}</pre>$0"},"Angular CanActivate Guard Route":{"prefix":"ng-route-guard-canactivate","description":"CanActivate Guard Route","types":"typescript, html","body":"import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\nimport { Observable } from 'rxjs';\n\n@Injectable()\nexport class ${1:CanActivate}Guard implements CanActivate {\n\tcanActivate(\n\t\troute: ActivatedRouteSnapshot,\n\t\tstate: RouterStateSnapshot\n\t): Observable<boolean> | Promise<boolean> | boolean {\n\t\treturn true;$0\n\t}\n}\n"},"Angular CanActivateChild Guard Route":{"prefix":"ng-route-guard-canactivatechild","description":"CanActivateChild Route","types":"typescript, html","body":"import { Injectable } from '@angular/core';\nimport { CanActivateChild, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\nimport { Observable } from 'rxjs';\n\n@Injectable()\nexport class ${1:CanActivateChild}Guard implements CanActivateChild {\n\tcanActivateChild(\n\t\troute: ActivatedRouteSnapshot,\n\t\tstate: RouterStateSnapshot\n\t): Observable<boolean> | Promise<boolean> | boolean {\n\t\treturn true;$0\n\t}\n}\n"},"Angular Resolve Guard Route":{"prefix":"ng-route-guard-resolve","description":"Resolve Guard Route","types":"typescript, html","body":"import { Injectable } from '@angular/core';\nimport { Resolve, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\nimport { Observable } from 'rxjs';\n\n@Injectable()\nexport class ${1:Resolve}Guard implements Resolve<${2:T}> {\n\tresolve(\n\t\troute: ActivatedRouteSnapshot,\n\t\tstate: RouterStateSnapshot\n\t): Observable<any> | Promise<any> | any {\n\t\treturn true;$0\n\t}\n}\n"},"Angular CanLoad Guard Route":{"prefix":"ng-route-guard-canload","description":"CanLoad Guard Route","types":"typescript, html","body":"import { Injectable } from '@angular/core';\nimport { CanLoad, Route } from '@angular/router';\nimport { Observable } from 'rxjs';\n\n@Injectable()\nexport class ${1:CanLoad}Guard implements CanLoad {\n\tcanLoad(\n\t\t${2:route}: Route\n\t): Observable<boolean> | Promise<boolean> | boolean {\n\t\treturn true;$0\n\t}\n}\n"},"Angular CanDeactivate Guard Route":{"prefix":"ng-route-guard-candeactivate","description":"CanDeactivate Guard Route","types":"typescript, html","body":"import { Injectable } from '@angular/core';\nimport { CanDeactivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\nimport { Observable } from 'rxjs';\n\n@Injectable()\nexport class ${1:CanDeactivate}Guard implements CanDeactivate<${2:T}> {\n\tcanDeactivate(\n\t\tcomponent: ${2:T},\n\t\troute: ActivatedRouteSnapshot,\n\t\tstate: RouterStateSnapshot\n\t): Observable<boolean> | Promise<boolean> | boolean {\n\t\treturn true;$0\n\t}\n}"},"Angular If Directive":{"prefix":"ng-if","description":"If directive: *ngIf=\"expression\"","types":"typescript, html","body":"*ngIf=\"${1:expression}\""},"Angular If Else Directive":{"prefix":"ng-if-else","description":"v4: If else directive: *ngIf=\"expression; else\"","types":"typescript, html","body":"<ng-container *ngIf=\"${1:expression}; else ${2:elseTemplate}\">\n\t$3\n</ng-container>\n<ng-template #${2:elseTemplate}>\n\t$4\n</ng-template>\n$0"},"Angular If Then Else Directive":{"prefix":"ng-if-then-else","description":"v4: If then else directive: *ngIf=\"expression; then; else\"","types":"typescript, html","body":"<ng-container *ngIf=\"${1:expression}; then ${2:thenTemplate}; else ${3:elseTemplate}\"></ng-container>\n<ng-template #${2:thenTemplate}>\n\t$4\n</ng-template>\n<ng-template #${3:elseTemplate}>\n\t$5\n</ng-template>\n$0"},"Angular For-loop Directive":{"prefix":"ng-for","description":"For-loop directive","types":"typescript, html","body":"*ngFor=\"let ${1:item} of ${2:items}\"$0"},"Angular For-loop Directive with li element":{"prefix":"ng-for-li","description":"For-loop directive with li element","types":"typescript, html","body":"<li *ngFor=\"let ${1:item} of ${2:items}\">$0</li>"},"Angular For-loop Directive with index":{"prefix":"ng-for-index","description":"For-loop directive with index","types":"typescript, html","body":"*ngFor=\"let ${1:item} of ${2:items}; let i=index\"$0"},"Angular For-loop Directive with trackBy":{"prefix":"ng-for-trackBy","description":"For-loop directive with trackBy","types":"typescript, html","body":"*ngFor=\"let ${1:item} of ${2:items}; trackBy:${1:item}.id\"$0"},"Angular 1 Loop Directive":{"prefix":"ng-repeat","description":"Use ngFor instead.","types":"typescript, html","body":"*ngFor=\"let ${1:item} of ${2:items}\"$0"},"Angular Switch":{"prefix":"ng-switch","description":"Switch template","types":"typescript, html","body":"<span [ngSwitch]=\"${1:expression}\">\n<p *ngSwitchCase=\"true\">\n\n</p>\n<p *ngSwitchCase=\"false\">\n\n</p>\n<p *ngSwitchDefault>\n\n</p>\n</span>"},"Angular Oneway Binding":{"prefix":"ng-binding-oneway","description":"Property: [property]=\"expression\"","types":"typescript, html","body":"[${1:property}]=\"${2:expression}\"$0"},"Angular Twoway Binding":{"prefix":"ng-binding-twoway","description":"Two-way data binding with the NgModel","types":"typescript, html","body":"[(ngModel)]=\"${1:Name}\"$0"},"Angular Model Binding":{"prefix":"ng-model","description":"Two-way data binding with the NgModel","types":"typescript, html","body":"[(ngModel)]=\"${1:Name}\"$0"},"Angular Class":{"prefix":"ng-class","description":"CSS class","types":"typescript, html","body":"[ngClass]=\"{'${1:class}': ${2:true}}\"$0"},"Angular Style":{"prefix":"ng-style","description":"CSS style","types":"typescript, html","body":"[ngStyle]=\"{'${1:property}': ${2:expression}}\"$0"},"Angular Property":{"prefix":"ng-property","description":"Property: [property]=\"expression\"","types":"typescript, html","body":"[${1:property}]=\"${2:expression}\"$0"},"Angular Event":{"prefix":"ng-event","description":"Event: (event) = \"expression()\"","types":"typescript, html","body":"(${1:event}) = \"${2:expression}()\"$0"},"Angular Interpolation":{"prefix":"ng-interpolation","description":"Interpolation: {{ interpolation }}","types":"typescript, html","body":"{{ ${1:interpolation} }}$0"},"Angular Click Event":{"prefix":"ng-click","description":"Click event","types":"typescript, html","body":"(click)=\"${1:expression}\"$0"},"Angular 1 Show Directive":{"prefix":"ng-show","description":"Usage: Bind to the hidden property.","types":"typescript, html","body":"[hidden]=\"!${1:expression}\"$0"},"Angular 1 Hide Directive":{"prefix":"ng-hide","description":"Usage: Bind to the hidden property.","types":"typescript, html","body":"[hidden]=\"${1:expression}\"$0"},"Angular 1 Href Directive":{"prefix":"ng-href","description":"Usage: Bind to the href property.","types":"typescript, html","body":"[href]=\"${1:url}\"$0"},"Angular 1 Src Directive":{"prefix":"ng-src","description":"Usage: Bind to the src property.","types":"typescript, html","body":"[src]=\"${1:url}\"$0"},"Angular 1 OrderBy":{"prefix":"ng-orderBy","description":"For performance reasons, no comparable pipe exists in Angular 2. Instead, use component code to order or sort results. If you need the same ordering or sorting code in several templates, consider building a custom pipe.","types":"typescript, html","body":"$0"},"Angular 1 Filter":{"prefix":"ng-filter","description":"For performance reasons, no comparable pipe exists in Angular 2. Do all your filtering in the component. If you need the same filtering code in several templates, consider building a custom pipe.","types":"typescript, html","body":"$0"},"Submit Button":{"prefix":"ng-button-submit","description":"A submit button element with a click event","types":"typescript, html","body":"<button type=\"submit\">${1:Submit}</button>\n$0"},"Click Button":{"prefix":"ng-button","description":"A button element with a click event","types":"typescript, html","body":"<button (click)=\"${1:click()}\">${2:name}</button>\n$0"},"PWA Link manifest":{"prefix":"pwa-link-manifest","description":"PWA Link Manifest","types":"html","body":"<link rel=\"manifest\" href=\"./manifest.json\">$0"},"Angular Flex Layout Import":{"prefix":"fx-import","description":"Flex Layout Import","types":"typescript, html","body":"import { FlexLayoutModule } from '@angular/flex-layout';"},"Angular Flex Full Layout Element":{"prefix":"fx-full-layout-element","description":"Flex Full Layout Element","types":"typescript, html","body":"<${1:div} fxLayout=\"${2:row,column,row-reverse,column-reverse}\" fxLayoutAlign=\"${3:start,center,end,space-around,space-between} ${4:start,center,end,stretch}\" fxLayoutGap=\"${5:gap}px\">\n\t$0\n</${1:div}>"},"Angular Flex Layout":{"prefix":"fx-layout","description":"Flex Layout Property","types":"typescript, html","body":"fxLayout=\"${1:row,column,row-reverse,column-reverse}\"$0"},"Angular Flex Layout Align":{"prefix":"fx-layout-align","description":"Flex Layout Align Property","types":"typescript, html","body":"fxLayoutAlign=\"${1:start,center,end,space-around,space-between} ${2:start,center,end,stretch}\"$0"},"Angular Flex Layout Align Center":{"prefix":"fx-layout-align-center","description":"Flex Layout Align Center","types":"typescript, html","body":"fxLayoutAlign=\"center center\"$0"},"Angular Flex Layout Gap":{"prefix":"fx-layout-gap","description":"Flex Layout Gap Property","types":"typescript, html","body":"fxLayoutGap=\"${1:gap}px\"$0"},"Angular Flex Row":{"prefix":"fx-row","description":"Flex Layout Row","types":"typescript, html","body":"fxLayout=\"row\"$0"},"Angular Flex Reverse Row":{"prefix":"fx-row-reverse","description":"Flex Layout Reverse Row","types":"typescript, html","body":"fxLayout=\"row-reverse\"$0"},"Angular Flex Column":{"prefix":"fx-col","description":"Flex Layout Column","types":"typescript, html","body":"fxLayout=\"column\"$0"},"Angular Flex Reverse Column":{"prefix":"fx-col-reverse","description":"Flex Layout Column","types":"typescript, html","body":"fxLayout=\"column-reverse\"$0"},"Angular Flex Item":{"prefix":"fx-item","description":"Flex Layout Item","types":"typescript, html","body":"fxFlex=\"${1:grow} ${2:shrink} ${3:basis}\"$0"},"Angular Flex Item Element":{"prefix":"fx-item-element","description":"Flex Layout Item Element","types":"typescript, html","body":"<${1:div} fxFlex=\"${2:grow} ${3:shrink} ${4:basis}\">\n\t$0\n</${1:div}>"},"Angular Flex Item Offset":{"prefix":"fx-item-offset","description":"Flex Layout Item with fxFlexOffset","types":"typescript, html","body":"<div fxFlex=\"${1:value}\" fxFlexOffset=\"${2:offset}px\">\n\t$0\n</div>"},"Angular Flex Item Order":{"prefix":"fx-item-order","description":"Flex Layout Item with fxFlexOrder","types":"typescript, html","body":"<div fxFlex=\"${1:value}\" fxFlexOrder=\"${2:order}\">\n\t$0\n</div>"},"Angular Flex Item Align":{"prefix":"fx-item-align","description":"Flex Layout Item with fxFlexAlign","types":"typescript, html","body":"<div fxFlex=\"${1:value}\" fxFlexAlign=\"${2:start,baseline,center,end}\">\n\t$0\n</div>"},"Angular Flex Item Fill":{"prefix":"fx-item-fill","description":"Flex Layout Item with fxFlexFill","types":"typescript, html","body":"<div fxFlex=\"${1:value}\" fxFlexFill>\n\t$0\n</div>"}}}
